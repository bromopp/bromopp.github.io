---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Props {
  src: string | ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  format?: 'webp' | 'avif' | 'png' | 'jpg';
  quality?: number;
  densities?: number[];
}

const {
  src,
  alt,
  width = 600,
  height = 400,
  class: className = '',
  loading = 'lazy',
  format = 'webp',
  quality = 80,
  densities = [1, 2],
  ...rest
} = Astro.props;
---

<Image
  src={src}
  alt={alt}
  width={width}
  height={height}
  format={format}
  quality={quality}
  loading={loading}
  densities={densities}
  class={`${className} transition-all duration-300`}
  {...rest}
/>

<style>
  /* Placeholder while image loads */
  img[loading="lazy"] {
    background: linear-gradient(45deg, #2a2a2a 25%, transparent 25%), 
                linear-gradient(-45deg, #2a2a2a 25%, transparent 25%), 
                linear-gradient(45deg, transparent 75%, #2a2a2a 75%), 
                linear-gradient(-45deg, transparent 75%, #2a2a2a 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
    background-color: #1a1a1a;
  }
  
  /* Smooth loading transition */
  img {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }
  
  img.loaded {
    opacity: 1;
  }
</style>

<script>
  // Add loaded class when image finishes loading
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('img[loading="lazy"]');
    
    images.forEach((img) => {
      if (img.complete) {
        img.classList.add('loaded');
      } else {
        img.addEventListener('load', () => {
          img.classList.add('loaded');
        });
      }
    });
  });
</script>
